module Marketplace.CentralCounterpartyCustomer where


import Marketplace.Notification
import Marketplace.Transfer
import Marketplace.Utils

import DA.Finance.Asset
import DA.Finance.Types


template CCPCustomerInvitation
  with
    operator : Party
    ccp : Party
    ccpCustomer : Party
    custodian : Party
  where
    signatory ccp

    controller ccpCustomer can
      CCPCustomerInvitation_Accept : ContractId CCPCustomer
        do
          let custodianAccountId = getAccountId ccpCustomer custodian [custodian]
              accountId = getAccountId ccpCustomer ccp [custodian]
          create DismissibleNotification with
            sender = ccpCustomer, senderRole = Some InvestorRole
            receiver = ccp, text = "CCP customer invitation accepted."
          create CCPCustomer with ..

      CCPCustomerInvitation_Reject : ()
        do
          create DismissibleNotification with
            sender = ccpCustomer, senderRole = Some InvestorRole
            receiver = ccp, text = "CCP customer invitation rejected."
          return ()


template CCPCustomer
  with
    operator : Party
    ccp : Party
    ccpCustomer : Party
    accountId : Id
    custodianAccountId : Id
  where
    signatory ccp, ccpCustomer

    key (ccp, operator, ccpCustomer) : (Party, Party, Party)
    maintainer key._1

    controller ccp can
      nonconsuming CCPCustomer_RequestInternalTransfer : ContractId DepositTransferRequest
        with
          depositCid : ContractId AssetDeposit  -- ccp needs visibility to those
                                                -- otherwise we add a custodian <> ccp relationship
          isInbound : Bool  -- from the point of view of the clearer
          amount : Decimal
        do
          deposit <- fetch depositCid
          assert $ deposit.account.owner == ccpCustomer
          let receiverAccountId = if isInbound then accountId else custodianAccountId
          [newDepositCid] <- exercise depositCid AssetDeposit_Split with quantities = [amount]
          create DepositTransferRequest with sender = ccpCustomer, senderAccountId = deposit.account.id, depositCid = newDepositCid, ..
