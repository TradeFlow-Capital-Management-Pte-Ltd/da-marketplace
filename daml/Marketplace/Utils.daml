daml 1.2
module Marketplace.Utils where

import DA.Finance.Types

import DA.Next.Set
import DA.Optional
import DA.Text

template Notification
  with
    sender : Party
    senderRole : Optional MarketRole
    receiver : Party
    text : Text
  where
    signatory sender, receiver

    controller receiver can
      Notification_Dismiss : ()
        do return ()


data MarketRole = CustodianRole | IssuerRole | ExchangeRole | InvestorRole | BrokerRole
    deriving (Show, Eq)

getAccountId : Party -> Party -> [Party] -> Id
getAccountId owner provider signatories = Id with
    signatories = fromList signatories
    label = getAccountLabel owner provider
    version = 0


getAccountLabel : Party -> Party -> Text
getAccountLabel owner provider = show owner <> "@" <> show provider


getAccountOwnerProvider: Text -> (Party, Party)
getAccountOwnerProvider label =
  let [owner, provider] = map (fromSome . partyFromText . replace "'" "") (splitOn "@" label)
  in (owner, provider)
