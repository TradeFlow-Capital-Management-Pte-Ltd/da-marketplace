module CustodianTrigger where

import Daml.Trigger

import Marketplace.Custodian
import Marketplace.Transfer

import Utils

handleCustodian : Trigger ()
handleCustodian = Trigger
  { initialize = return ()
  , updateState = \_ -> pure ()
  , rule = handleCustodianRule
  , registeredTemplates = RegisteredTemplates  [ registeredTemplate @DepositTransferRequest
                                               , registeredTemplate @DepositCreditRequest
                                               , registeredTemplate @DepositDebitRequest
                                               , registeredTemplate @CustodianRelationshipRequest ]
  , heartbeat = None
  }

-- |Accept 'DepositTransferRequest' and 'CustodianRelationshipRequest'
handleCustodianRule : Party -> TriggerA () ()
handleCustodianRule party = do
  debug "Running custodian rule..."

  -- Accept all 'DepositTransferRequest'
  mapExercise DepositTransferRequest_Approve (.sender) <$> query @DepositTransferRequest

  -- Accept all 'CustodianRelationshipRequest'
  mapExercise CustodianRelationshipRequest_Approve (.requester) <$> query @CustodianRelationshipRequest

  -- Accept all 'DepositCreditRequest'
  mapExercise DepositCreditRequest_Approve (.owner) <$> query @DepositCreditRequest

  -- Accept all 'DepositDebitRequest'
  mapExercise DepositDebitRequest_Approve (.owner) <$> query @DepositDebitRequest

  return ()
